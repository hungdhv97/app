{"version":3,"sources":["App.js","index.js"],"names":["handleErrors","response","ok","Error","statusText","customDataSource","CustomStore","key","loadMode","load","fetch","then","json","catch","insert","values","console","log","method","body","JSON","stringify","headers","remove","encodeURIComponent","update","notesEditorOptions","height","App","props","loadMessages","viMessages","locale","id","dataSource","keyExpr","showBorders","visible","applyFilter","defaultPageSize","showPageSizeSelector","allowedPageSizes","showInfo","mode","allowAdding","allowDeleting","allowUpdating","title","showTitle","width","my","at","of","window","itemType","colCount","colSpan","dataField","editorType","editorOptions","caption","dataType","React","Component","themes","initialized","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eeb177fa.chunk.js","sourcesContent":["import React from 'react';\n\nimport DataGrid, {\n  Column,\n  Pager,\n  Editing,\n  Popup,\n  Paging,\n  Position,\n  Form,\n  FilterRow\n} from 'devextreme-react/data-grid';\nimport 'devextreme-react/text-area';\nimport { Item } from 'devextreme-react/form';\nimport viMessages from 'devextreme/localization/messages/vi.json';\nimport { locale, loadMessages } from 'devextreme/localization';\nimport CustomStore from 'devextreme/data/custom_store';\nimport DataSource from 'devextreme/data/data_source';\nimport 'whatwg-fetch';\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n}\n\nconst customDataSource = new CustomStore({\n  key: 'id',\n  loadMode: 'raw',\n  load: () => {\n    return fetch('https://my-json-server.typicode.com/hungdhv97/app/documents')\n      .then(handleErrors)\n      .then(response => response.json())\n      .catch(() => { throw 'Network error' });\n  },\n  insert: (values) => {\n    console.log(values);\n    return fetch('https://my-json-server.typicode.com/hungdhv97/app/documents', {\n      method: 'POST',\n      body: JSON.stringify(values),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(handleErrors)\n      .catch(() => { throw 'Network error' });\n  },\n  remove: (key) => {\n    console.log(key);\n    return fetch(`https://my-json-server.typicode.com/hungdhv97/app/documents/${encodeURIComponent(key)}`, {\n      method: 'DELETE'\n    })\n      .then(handleErrors)\n      .catch(() => { throw 'Network error' });\n  },\n  update: (key, values) => {\n    console.log(values);\n    return fetch(`https://my-json-server.typicode.com/hungdhv97/app/documents/${encodeURIComponent(key)}`, {\n      method: 'PATCH',\n      body: JSON.stringify(values),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(handleErrors)\n      .catch(() => { throw 'Network error' });\n  }\n});\n\n\n\n\nconst notesEditorOptions = { height: 100 };\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    loadMessages(viMessages);\n    locale('vi');\n  }\n  render() {\n    return (\n      <div id=\"data-grid-demo\">\n        <DataGrid\n          dataSource={customDataSource}\n          keyExpr=\"ID\"\n          showBorders={true}\n        >\n          <FilterRow visible={true}\n            applyFilter=\"auto\" />\n          <Paging defaultPageSize={10} />\n          <Pager\n            showPageSizeSelector={true}\n            allowedPageSizes={[5, 10, 20]}\n            showInfo={true} />\n          <Editing\n            mode=\"popup\"\n            allowAdding={true}\n            allowDeleting={true}\n            allowUpdating={true}\n          >\n            <Popup title=\"Thông tin công văn\" showTitle={true} width={700} height={525}>\n              <Position my=\"top\" at=\"top\" of={window} />\n            </Popup>\n            <Form>\n              <Item itemType=\"group\" colCount={2} colSpan={2}>\n                <Item dataField=\"DocumentID\" />\n                <Item dataField=\"DateDocument\" />\n                <Item dataField=\"Office\" />\n                <Item dataField=\"DateInsert\" />\n                <Item dataField=\"PageNumber\" />\n                <Item dataField=\"CopyNumber\" />\n                <Item dataField=\"Confidential\" />\n                <Item dataField=\"Receiver\" />\n                <Item dataField=\"ImageLink\" />\n                <Item dataField=\"FileLink\" />\n                <Item\n                  dataField=\"Abstract\"\n                  editorType=\"dxTextArea\"\n                  colSpan={2}\n                  editorOptions={notesEditorOptions} />\n              </Item>\n            </Form>\n          </Editing>\n          <Column dataField=\"DocumentID\" caption=\"Số CV\" width={70} />\n          <Column dataField=\"DateDocument\" caption=\"Ngày CV\" dataType=\"date\" width={100} />\n          <Column dataField=\"Office\" caption=\"CQ Ban Hành\" width={150} />\n          <Column dataField=\"DateInsert\" caption=\"Ngày Nhập CV\" dataType=\"date\" width={100} />\n          <Column dataField=\"Abstract\" caption=\"Trích Yếu\" width={150} />\n          <Column dataField=\"PageNumber\" caption=\"Số Trang\" width={70} />\n          <Column dataField=\"CopyNumber\" caption=\"Số Bản\" width={70} />\n          <Column dataField=\"Confidential\" caption=\"Độ Mật\" width={100} />\n          <Column dataField=\"ImageLink\" caption=\"Ảnh\" />\n          <Column dataField=\"FileLink\" caption=\"File\" />\n          <Column dataField=\"Receiver\" caption=\"Nơi Nhận\" width={130} />\n          <Column dataField=\"IsRead\" caption=\"Đã Đọc\" width={70} />\n          <Column dataField=\"DateRead\" caption=\"Ngày Đọc\" width={100} />\n        </DataGrid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import './styles.css';\n\rimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App.js';\n\nimport themes from 'devextreme/ui/themes';\nthemes.initialized(() => ReactDOM.render(\n  <App />,\n  document.getElementById('app')\n));\n"],"sourceRoot":""}